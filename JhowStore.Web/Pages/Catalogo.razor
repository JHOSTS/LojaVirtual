@page "/produtos"
@inject IProdutoService produtoService

<NavMenu />

@if(Produtos == null)
{
    <h1>Carregando produtos!</h1>
    <ExibirSpinner />
}
else
{
    <h3 class="mb-5">Catálogo</h3>
    @if(Produtos.Count() > 0)
    {
        var produtosPorCategoria = from produto in Produtos
                                   group produto by produto.CategoriaId into prodPorCatGrupo
                                   orderby prodPorCatGrupo.Key
                                   select prodPorCatGrupo;

        @foreach  (var prodGrupo in produtosPorCategoria)
        {
            <h4>@prodGrupo.FirstOrDefault(pg => pg.CategoriaId == prodGrupo.Key).CategoriaNome</h4>
            <div class="row mt-3">
                <ExibirProdutos Produtos="@prodGrupo" />
            </div>
            <hr class="mb-2"/>
        }

    }
    else
    {
        <h5>Não há produtos!</h5>
    }
}

@code {
    public IEnumerable<ProdutoDto>? Produtos { get; set; }
    [Inject]
    public ICarrinhoCompraService? carrinhoCompraService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Produtos = await produtoService.GetItens();

        var carrinhoCompraItens = await carrinhoCompraService.GetItens(UsuarioLogado.UsuarioId);
        var totalQuantidade = carrinhoCompraItens.Sum(i => i.Quantidade);

        carrinhoCompraService.RaiseEventOnCarrinhoCompraChanged(totalQuantidade);
    }


}
